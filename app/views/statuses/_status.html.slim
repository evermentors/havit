= content_for :card_photo_original, flush: true
  = status_photo(status)
  = link_to '원본 사진 보기', status.photo.url, target: "_blank", class: 'btn btn-default btn-xs show-original-button'

= content_for :card_author, flush:true
  a.pull-left href=user_path(status.character.user)
    .avatar-wrapper.status-avatar
      = image_tag avatar_url(status.character.user)
  .status-author
    a.status-user-name href=user_path(status.character.user) = status.character.user.name
    - unless status.group.name == 'Universe'
      span.fa.fa-lg.fa-caret-right
      = link_to status.group.name, group_url(status.group), class: "status-group-name"
    a.time href=status_path(status)
      = timeago_tag status.created_at, format: "%B %-d일 %A %p %-l:%M", title: (l status.created_at, format: "%Y년 %B %-d일 %A %p %-l:%M")
  .status-likes-count.color-havit class="#{'hidden' if status.likes_count == 0}"
      span.glyphicon.glyphicon-heart
      span.likes-count => status.likes_count

= content_for :card_goals, flush:true
  .goals-hidden
    .monthly-goal.small data-id="#{monthly_goal(status.character, status.verified_at).id unless no_monthly_goal?(status.character, status.verified_at)}"
      - if no_monthly_goal?(status.character, status.verified_at)
        = "#{seasonstring status.verified_at}에 목표가 없었습니다."
      - else
        = "#{seasonstring status.verified_at} 목표: "
        span.goal-text = monthly_goal(status.character, status.verified_at).description
    .weekly-goal.small data-id="#{weekly_goal(status.character, status.verified_at).id unless no_weekly_goal?(status.character, status.verified_at)}"
      - if no_weekly_goal?(status.character, status.verified_at)
        = "#{weekstring_short status.verified_at} 목표가 없었습니다."
      - else
        = "#{weekstring_short status.verified_at} 목표: "
        span.goal-text = weekly_goal(status.character, status.verified_at).description
  .daily-goal data-id="#{daily_goal(status.character, status.verified_at).id unless no_daily_goal?(status.character, status.verified_at)}"
    - if no_daily_goal?(status.character, status.verified_at)
      = "#{datestring status.verified_at}에는 목표가 없었습니다."
    - else
      = "#{datestring status.verified_at} #{weekdaystring status.verified_at}의 목표: "
      span.goal-text = daily_goal(status.character, status.verified_at).description

= content_for :card_message, flush:true
  span.description.nl2br == render 'statuses/description', status: status
  = form_tag status_path(status), method: 'patch', remote: true, class: 'modify-actions'
      .buttons
        button.btn-xs.btn-link.btn-confirm 확인
        button.btn-xs.btn-link.btn-cancel type='button' 취소
      = text_area_tag 'status[description]', status.description, placeholder: '어떤 실천을 하셨나요?', class: 'form-control status-textarea', required: true

= content_for :card_photo, flush:true
  = status_photo(status)
  - unless no_daily_goal?(status.character, status.verified_at.tomorrow)
    .next-goal
      = "#{status.character.user.name}님의 다음 목표는 "
      span.goal-description = daily_goal(status.character, status.verified_at.tomorrow).description
      ' 입니다.

= content_for :card_actions, flush:true
  .like-form
    == render 'statuses/like_icon', status: status
  - if status.character_id == current_character.id
    .other-actions
      a.modify-status-link data-toggle='tooltip' data-plcaement='top' title='실천 인증 수정'
        span.glyphicon.glyphicon-pencil
      a.delete-status-link data-toggle='tooltip' data-plcaement='top' title='실천 인증 삭제' href="/statuses/#{status.id}" data-method='delete'
        span.glyphicon.glyphicon-remove
  .likers class="#{'expand-right' unless status.character_id == current_character.id}"
    == render 'statuses/liker_names', status: status

= content_for :card_comments, flush:true
  = commontator_thread(status)

= render partial: 'layouts/card', locals: {status_id: status.id}
